### easy
1. 用 add first 或 add last 这套新的 API 改写 Deque 的代码
略
2. 分析 Queue 和 Priority Queue 的源码
略
3. 删除排序数组中的重复项（Facebook、字节跳动、微软在半年内面试中考过）
快慢指针，满指针i只用来指向不重复的元素，快指针用来遍历数组，只有在j的位置的元素不等于i时，才需要更新i
class Solution {
    public int removeDuplicates(int[] nums) {
    if (nums.length == 0) return 0;
    int i = 0;
    for (int j = 1; j < nums.length; j++) {
        if (nums[j] != nums[i]) {
            i++;
            nums[i] = nums[j];
        }
    }
    return i + 1;
    }
}
4. 三数之和
https://leetcode-cn.com/problems/3sum/solution/san-shu-zhi-he-by-leetcode-solution/
这边需要两个操作，排序O(nlogn)+二重循环的O(n^2)，所以总的时间复杂度是O(n^2)。其中二重循环使用了先确定一个元素，然后二重指针夹逼的方式
5. 加一
O（n）的复杂度，每次只有两种情况，9+1进位和非进位
最后如果是999之类的情况，需要将原数组长度加一
class Solution {
    public int[] plusOne(int[] digits) {
        int len = digits.length;
        for(int i = len - 1; i >= 0; i--) {
            digits[i]++;
            digits[i] %= 10;
            if(digits[i]!=0)
                return digits;
        }
        digits = new int[len + 1];
        digits[0] = 1;
        return digits;
    }
}

