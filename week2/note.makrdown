前K个高频元素
这道题核心的数据结构主要是两个，第一个字典hashmap，维护元素和出现次数的KV，这步count的复杂度是N（N为输入串的长度）
第二个数据结构是优先队列，由于我们只需要前K个元素，所以维护一个K个元素的小顶堆即可，向堆中添加元素的复杂度是log(k)，需要将所有元素的出现次数都add到这个堆中，所以这一步的复杂度是Nlog(k)，最后将小顶堆倒叙输出，复杂度是k(logk)
所以总的时间的复杂度是n+nlogk+klogk, 由于n>k，所以总的时间复杂度是nlogk,（其实粗略点写成nlogn我觉得也可以）
空间复杂度是n的hash表以及k的堆，所以空间复杂度是n
所以你的答案基本上是正确的。
*** 这里需要注意的点是，要使用小顶堆维护k个元素，这样移除堆顶元素才是正确的。使用大顶堆，堆顶是最大元素，不管新来的元素是小于还是大于堆顶元素，都没有办法移除堆顶元素